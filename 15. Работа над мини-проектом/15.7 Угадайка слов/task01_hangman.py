'''
–£–≥–∞–¥–∞–π–∫–∞ —Å–ª–æ–≤
–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: 
–ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —Å–ª–æ–≤–æ, –∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –µ–≥–æ —É–≥–∞–¥–∞—Ç—å. 
–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤—Å–µ –±—É–∫–≤—ã —Å–ª–æ–≤–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã. 
–¢–∞–∫–∂–µ —Ä–∏—Å—É–µ—Ç—Å—è –≤–∏—Å–µ–ª–∏—Ü–∞ —Å –ø–µ—Ç–ª–µ–π. 
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±—É–∫–≤—É, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –≤—Ö–æ–¥–∏—Ç—å –≤ —ç—Ç–æ —Å–ª–æ–≤–æ. 
–ï—Å–ª–∏ —Ç–∞–∫–∞—è –±—É–∫–≤–∞ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–µ, —Ç–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Å—Ç–∞–≤–∏—Ç –±—É–∫–≤—É —Å—Ç–æ–ª—å–∫–æ —Ä–∞–∑, —Å–∫–æ–ª—å–∫–æ –æ–Ω–∞ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ —Å–ª–æ–≤–µ. 
–ï—Å–ª–∏ —Ç–∞–∫–æ–π –±—É–∫–≤—ã –Ω–µ—Ç, –∫ –≤–∏—Å–µ–ª–∏—Ü–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –∫—Ä—É–≥ –≤ –ø–µ—Ç–ª–µ, –∏–∑–æ–±—Ä–∞–∂–∞—é—â–∏–π –≥–æ–ª–æ–≤—É. 
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –æ—Ç–≥–∞–¥—ã–≤–∞—Ç—å –±—É–∫–≤—ã –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –æ—Ç–≥–∞–¥–∞–µ—Ç –≤—Å—ë —Å–ª–æ–≤–æ. 
–ó–∞ –∫–∞–∂–¥—É—é –Ω–µ—É–¥–∞—á–Ω—É—é –ø–æ–ø—ã—Ç–∫—É –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –µ—â–µ –æ–¥–Ω–∞ —á–∞—Å—Ç—å —Ç—É–ª–æ–≤–∏—â–∞ –≤–∏—Å–µ–ª—å–Ω–∏–∫–∞ 
(–æ–±—ã—á–Ω–æ –∏—Ö 6: –≥–æ–ª–æ–≤–∞, —Ç—É–ª–æ–≤–∏—â–µ, 2 —Ä—É–∫–∏ –∏ 2 –Ω–æ–≥–∏).

–°–æ—Å—Ç–∞–≤–ª—è—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:
    –¶–µ–ª—ã–µ —á–∏—Å–ª–∞ (—Ç–∏–ø int);
    –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ;
    –í–≤–æ–¥ / –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö (—Ñ—É–Ω–∫—Ü–∏–∏ input() –∏ print());
    –£—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä (if/elif/else);
    –¶–∏–∫–ª while;
    –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª;
    –û–ø–µ—Ä–∞—Ç–æ—Ä—ã break, continue;
    –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π;
    –°–ø–∏—Å–æ—á–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è;
    –†–∞–±–æ—Ç–∞ —Å –º–æ–¥—É–ª–µ–º random –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. 
–ù–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏–≥—Ä–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è Hangman.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. 
–ü–æ—á–∏—Ç–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –∏–≥—Ä–µ –º–æ–∂–Ω–æ (—Ç—É—Ç)[https://en.wikipedia.org/wiki/Hangman_(game)]. 

–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–º—ã
–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –º–æ–¥—É–ª—å random;
–°–æ–∑–¥–∞–π—Ç–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ word_list, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –∏–≥—Ä–µ.

–§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é get_word(), –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ —Å–ø–∏—Å–∫–∞ word_list –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.

–§—É–Ω–∫—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
–§—É–Ω–∫—Ü–∏—è display_hangman() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç tries ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è —Å–ª–æ–≤–∞ ‚Äì 
–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–º –≤–∏–¥–µ:
    –∑–Ω–∞—á–µ–Ω–∏–µ tries = 6 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–º—É –ø–æ–ª–æ–∂–µ–Ω–∏—é, –ø—É—Å—Ç–∞—è –≤–∏—Å–µ–ª–∏—Ü–∞;
    ...
    –∑–Ω–∞—á–µ–Ω–∏–µ tries = 0 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω–µ—á–Ω–æ–º—É –ø–æ–ª–æ–∂–µ–Ω–∏—é, —Ç–æ –µ—Å—Ç—å –ø—Ä–æ–∏–≥—Ä—ã—à—É –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–Ω–æ–º—É —Ç–µ–ª—É –ø–æ–≤–µ—à–µ–Ω–Ω–æ–≥–æ.
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. 
–î–ª—è –≤—ã–≤–æ–¥–∞ —Å–∏–º–≤–æ–ª–∞ –±—ç–∫—Å–ª–µ—à–∞ \\ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ —Å –ø–æ–º–æ—â—å—é \\, —Ç–æ –µ—Å—Ç—å –∫–æ–º–±–∏–Ω–∞—Ü–∏—è \\\\.

–§—É–Ω–∫—Ü–∏—è play()
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é play(), –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è –æ—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–≥—Ä—ã. 
–§—É–Ω–∫—Ü–∏—è play() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Å–ª–æ–≤–æ word, —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ñ—É–Ω–∫—Ü–∏–µ–π  get_word().
    def play(word):
        # —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
    word_completion = '_' * len(word)  # —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Å–∏–º–≤–æ–ª—ã _ –Ω–∞ –∫–∞–∂–¥—É—é –±—É–∫–≤—É –∑–∞–¥—É–º–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞
    guessed = False                    # —Å–∏–≥–Ω–∞–ª—å–Ω–∞—è –º–µ—Ç–∫–∞
    guessed_letters = []               # —Å–ø–∏—Å–æ–∫ —É–∂–µ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö –±—É–∫–≤
    guessed_words = []                 # —Å–ø–∏—Å–æ–∫ —É–∂–µ –Ω–∞–∑–≤–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤
    tries = 6                          # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
–§—É–Ω–∫—Ü–∏—è play() –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –¥–æ–ª–∂–Ω–∞:
    –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ç–µ–∫—Å—Ç '–î–∞–≤–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —É–≥–∞–¥–∞–π–∫—É —Å–ª–æ–≤!';
    –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã, —Ä–∞—Å–ø–µ—á–∞—Ç–∞–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ display_hangman() 
    —Å –Ω–∞—á–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø—Ä–æ–º–∞—Ö–æ–≤ tries = 6;
    –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ word_completion –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ —Å —Å–∏–º–≤–æ–ª–æ–º _ –Ω–∞ –∫–∞–∂–¥—É—é –±—É–∫–≤—É –∑–∞–¥—É–º–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞;
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–≤–æ–¥ –±—É–∫–≤ –∏–ª–∏ —Å–ª–æ–≤–∞ —Ü–µ–ª–∏–∫–æ–º. 
–ü—Ä–µ–¥—É—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞—â–∏—Ç—É –æ—Ç –¥—É—Ä–∞–∫–∞, –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Å–∏–º–≤–æ–ª, –Ω–µ —è–≤–ª—è—é—â–∏–π—Å—è –±—É–∫–≤–æ–π;
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —É–∂–µ –Ω–∞–∑–≤–∞–Ω–Ω—É—é –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ, —Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –µ–º—É –æ–± —ç—Ç–æ–º —Å–æ–æ–±—â–∏—Ç—å, 
–∏ –Ω–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞—Ç—å –ø–æ–ø—ã—Ç–∫—É;
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª –±—É–∫–≤—É, —Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ —Å–∏–º–≤–æ–ª—ã _ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç—Ç–æ–π –±—É–∫–≤–µ;
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ —Ü–µ–ª–∏–∫–æ–º, 
—Ç–æ —Å–ª–µ–¥—É–µ—Ç –µ–≥–æ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å –∏ –≤—ã–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!';
–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å—á–µ—Ä–ø–∞–ª –≤—Å–µ —Å–≤–æ–∏ –ø–æ–ø—ã—Ç–∫–∏ 
–∏ –Ω–µ —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ, —Å–ª–µ–¥—É–µ—Ç –≤—ã–≤–µ—Å—Ç–∏ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ.
–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ. 
–ü–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä.

–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã
–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å: 
–≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–ª–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ get_word(), 
–∞ –∑–∞—Ç–µ–º –ø–æ—Å–ª–µ–¥—É—é—â–∏–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ play().
–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã, 
–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∂–µ–ª–∞–µ—Ç –∏–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑.

–£–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
–ú–æ–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–µ—Ä–≤—É—é –∏ –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É —Å–ª–æ–≤–∞;
–°–ª–æ–≤–∞ –º–æ–∂–Ω–æ –≤—ã–¥–µ–ª–∏—Ç—å –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –¥–∞–≤–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é;
–°—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç–∞–∫–∂–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–≥—Ä—ã —Å 8 —á–∞—Å—Ç—è–º–∏ ‚Äî –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —Å—Ç—É–ø–Ω–∏, 
–∞ —Ç–∞–∫–∂–µ —Å–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ–≥–¥–∞ —Å–Ω–∞—á–∞–ª–∞ –∑–∞ –Ω–µ –æ—Ç–≥–∞–¥–∞–Ω–Ω—É—é –±—É–∫–≤—É —Ä–∏—Å—É—é—Ç—Å—è —á–∞—Å—Ç–∏ —Å–∞–º–æ–π –≤–∏—Å–µ–ª–∏—Ü—ã.
'''

import random

word_list = []

def get_words():
    while True:
        try:
            count = int(input('–°–∫–æ–ª—å–∫–æ —Å–ª–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–≤–µ—Å—Ç–∏? '))
            break
        except ValueError:
            print('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!')
    
    for i in range(count):
        word = input(f'–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ {i+1}: ').strip().upper()
        if word and word not in word_list:
            word_list.append(word)
    print(f'–î–æ–±–∞–≤–ª–µ–Ω–æ {len(word_list)} —Å–ª–æ–≤ –≤ –∏–≥—Ä—É!')

def get_word():
    if not word_list:
        return None
    word = random.choice(word_list)
    word_list.remove(word)
    return word

def display_hangman(tries, extended=False):
    if extended:
        stages = [
            """
        -----
        |   |
        |   üíÄ
        |  /|\\
        |  / \\
        |  |_|
        =========
        """,
            """
        -----
        |   |
        |   üòµ‚Äçüí´
        |  /|\\
        |  / \\
        |
        =========
        """,
            """
        -----
        |   |
        |   ü§Ø
        |  /|\\
        |  /
        |
        =========
        """,
            """
        -----
        |   |
        |   üò±
        |  /|\\
        |
        |
        =========
        """,
            """
        -----
        |   |
        |   üò≠
        |  /|
        |
        |
        =========
        """,
            """
        -----
        |   |
        |   üòµ
        |   |
        |
        |
        =========
        """,
            """
        -----
        |   |
        |   üòê
        |
        |
        |
        =========
        """,
            """
        -----
        |   |
        |
        |
        |
        |
        =========
        """
        ]
    else:
        stages = [
            """
        -----
        |   |
        |   üíÄ
        |  /|\\
        |  / \\
        |
        =========
        """,
            """
        -----
        |   |
        |   ü§Ø
        |  /|\\
        |  /
        |
        =========
        """,
            """
        -----
        |   |
        |   üò±
        |  /|\\
        |
        |
        =========
        """,
            """
        -----
        |   |
        |   üò≠
        |  /|
        |
        |
        =========
        """,
            """
        -----
        |   |
        |   üòµ
        |   |
        |
        |
        =========
        """,
            """
        -----
        |   |
        |   üòê
        |
        |
        |
        =========
        """,
            """
        -----
        |   |
        |
        |
        |
        |
        =========
        """
        ]
    print(stages[tries])

def play(word):
    # –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ –∏–≥—Ä—ã
    mode = input('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (1-–æ–±—ã—á–Ω—ã–π, 2-—Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏, 3-—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π): ')
    
    show_hints = mode == '2'
    extended_mode = mode == '3'
    tries = 7 if extended_mode else 6
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è word_completion
    if show_hints and len(word) > 2:
        word_completion = word[0] + '_' * (len(word) - 2) + word[-1]
        guessed_letters = [word[0], word[-1]]
    else:
        word_completion = '_' * len(word)
        guessed_letters = []
    
    guessed = False
    guessed_words = []
    
    print('–î–∞–≤–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —É–≥–∞–¥–∞–π–∫—É —Å–ª–æ–≤!')
    display_hangman(tries, extended_mode)
    print(word_completion)
    
    while not guessed and tries > 0:
        guess = input('–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É –∏–ª–∏ —Å–ª–æ–≤–æ: ').upper()
        
        if not guess.isalpha():
            print('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã!')
            continue
            
        if len(guess) == 1:
            if guess in guessed_letters:
                print('–í—ã —É–∂–µ –Ω–∞–∑—ã–≤–∞–ª–∏ —ç—Ç—É –±—É–∫–≤—É!')
                continue
            guessed_letters.append(guess)
            
            if guess in word:
                word_completion = ''.join([letter if letter in guessed_letters else '_' for letter in word])
                if '_' not in word_completion:
                    guessed = True
            else:
                tries -= 1
        else:
            if guess in guessed_words:
                print('–í—ã —É–∂–µ –Ω–∞–∑—ã–≤–∞–ª–∏ —ç—Ç–æ —Å–ª–æ–≤–æ!')
                continue
            guessed_words.append(guess)
            
            if guess == word:
                guessed = True
                word_completion = word
            else:
                tries -= 1
        
        if not guessed:
            display_hangman(tries, extended_mode)
            print(word_completion)
    
    if guessed:
        print('''
        üéâ –ü–û–ë–ï–î–ê! üéâ
        
           üòÑ
          /|\\  
          / \\  
        =========
        ''')
        print('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ! –í—ã –ø–æ–±–µ–¥–∏–ª–∏!')
    else:
        print(f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: {word}')

def main():
    get_words()
    
    while True:
        word = get_word()
        print(f'\n–û—Å—Ç–∞–ª–æ—Å—å —Å–ª–æ–≤: {len(word_list)}')
        play(word)
        
        continue_game = input('\n–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É? (–¥–∞/–Ω–µ—Ç): ').lower()
        if continue_game not in ['–¥–∞', '–¥', 'yes', 'y']:
            break
            
        if not word_list:
            new_game = input('\n–°–ª–æ–≤–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å! –•–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É? (–¥–∞/–Ω–µ—Ç): ').lower()
            if new_game in ['–¥–∞', '–¥', 'yes', 'y']:
                get_words()
            else:
                break
    
    print('–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!')

if __name__ == "__main__":
    main()